# Задание-1:
# Напишите функцию, возвращающую ряд Фибоначчи с n-элемента до m-элемента.
# Первыми элементами ряда считать цифры 1 1

def fib(n, m):
    v = [1, 1]
    for k in range(1, m):
        v.append(v[k-1]+v[k])
    return v[n-1:m]

lf = fib(1,10)

print(lf)

# Задача-2:
# Напишите функцию, сортирующую принимаемый список по возрастанию.
# Для сортировки используйте любой алгоритм (например пузырьковый).
# Для решения данной задачи нельзя использовать встроенную функцию и метод sort()

def my_asc_sort(l):
    n = len(l)
    alarm = True
    while alarm:
        alarm = False
        for k in range(1, n):
            alarm0 = l[k] < l[k-1] # Тревога! Не тот порядок
            if alarm0:
                l[k-1],l[k] = l[k],l[k-1] # swap
            alarm = alarm or alarm0  # если была хотя бы одна тревога, то повторить проход
    return l

listA = [1,2,3,5,3,4,0,7]

listB = my_asc_sort(listA)

print(listB)

#Задача-3:
# Даны четыре точки А1(х1, у1), А2(x2 ,у2), А3(x3 , у3), А4(х4, у4).
# Определить, будут ли они вершинами параллелограмма.

def test_parall(A1, A2, A3, A4):
    A11 = [A1[0] - A1[0], A1[1] - A1[1]]
    A21 = [A2[0] - A1[0], A2[1] - A1[1]]
    A31 = [A3[0] - A1[0], A3[1] - A1[1]]
    A41 = [A4[0] - A1[0], A4[1] - A1[1]]

    test1 =[(A21[0] + A31[0]) == A41[0], (A21[1] + A31[1]) == A41[1]]
    test2 =[(A21[0] + A41[0]) == A31[0], (A21[1] + A41[1]) == A31[1]]
    test3 =[(A31[0] + A41[0]) == A21[0], (A31[1] + A41[1]) == A21[1]]

    return (test1[0] and test1[1]) or (test2[0] and test2[1]) or (test3[0] and test3[1])    


A1 = [1, 2]
A2 = [2, 3]
A3 = [4, 2]
A4 = [5, 3]

total = test_parall(A1, A2, A3, A4)

if total:
    print('Да, являются')
else:
    print('Нет, не являются')


A1 = [1, 3]
A2 = [2, 3]
A3 = [4, 2]
A4 = [5, 3]

total = test_parall(A1, A2, A3, A4)

if total:
    print('Да, являются')
else:
    print('Нет, не являются')
